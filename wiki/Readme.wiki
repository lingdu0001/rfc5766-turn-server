<!-- Begin man2wiki.pl generated section -->
<!-- BSDBuild 2.9 (http://bsdbuild.hypertriton.com/) -->
TH TURN  "31 December 2012" "" ""SH GENERAL INFORMATIONThe \fBTURN Server\fP project contains the source code of a TURN server and TURN client 
messaging library. Also, four extra programs provided, for testing-only 
purposes. 
PPSee the INSTALL file for the building instructions.
PPAfter the build, you will have the following binary images:
TPB1.
\fIturnserver\fP: \fBTURN Server\fP relay. 
The compiled binary image of this program is located in bin/ sub-directory.
TPB2.
\fIturnadmin\fP: TURN administration tool. This tool can be used to generate 
TURN keys for the user accounts. For security reasons, we do not recommend 
storing passwords openly. The better option is to use pre-processed "keys" 
which are then used for authentication. These keys are generated by \fIturnadmin\fP. 
Turnadmin is a link to \fIturnserver\fP binary, but \fIturnadmin\fP performs different 
functions.
TPB3.
\fIuclient\fP: emulates multiple UDP,TCP,TLS or DTLS clients. 
(this program is provided for the testing purposes only !)
The compiled binary image of this program is located in turn.apps.examples/bin/ 
sub-directory.
PPWARNING: the \fIuclient\fP program is a primitive client application. 
It does not implement the re-transmission pattern that is necessary for 
a correct TURN client implementation. In TURN, the retransmission burden 
is lying entirely on the client application. We provide the messaging 
functionality in the client library, but the client must implement 
the correct Networking IO processing in the client program code.
TPB4.
\fIpeer\fP: a simple stateless UDP-only "echo" server, 
to be used as the final server in relay pattern ("\fIpeer\fP"). For every incoming 
UDP packet, it simply echoes it back.
(this program is provided for the testing purposes only !) 
When the test clients are communicating in the client-to-client manner, 
this component is not needed.
PPThe compiled binary image of this program is located in turn.apps.examples/bin/ subdirectory.
TPB5.
\fIstunclient\fP: a simple STUN client example.
The compiled binary image of this program is located in turn.apps.examples/bin/ subdirectory.
PPIn the "scripts" subdirectory, you will find the examples of command lines to be used 
to run the programs.
SH RUNTPB1.
\fIturnserver\fP application is a TURN relay server implementation. 
PPUsage:
PP$ \fIturnserver\fP [\fB-vfa\fP] [\fB-n\fP | \fB-c\fP &lt;config-file&gt; ] [\fB-b\fP &lt;user-db-file&gt; | \fB--userdb\fP=&lt;user-db-file&gt; ] [options]
PP$ \fIturnserver\fP \fB-h\fP
TPBFlags:
TPB\fB-v\fP, \fB--verbose\fP
Verbose.
TPB\fB-f\fP, \fB--fingerprint\fP
Use fingerprints in the TURN messages.
TPB\fB-a\fP, \fB--lt-cred-mech\fP
Use long-term credential mechanism. 
By default, no credential mechanism is used -
any user is allowed.
TPBConfig file setting:
TPB\fB-n\fP
Do not use configuration file, use only command line parameters.
TPB\fB-c\fP
Configuration file name (default - turnserver.conf).
The format of config file can be seen in
the supplied etc/turnserver.conf example file. Long 
names of the options are used as the configuration 
items names in the file. If not an absolute path is supplied, 
then the file is searched in the following directories: 
RSIP \(bu 3current directory
IP \(bu 3current directory etc/ subdirectory
IP \(bu 3upper directory level etc/
IP \(bu 3/etc/
IP \(bu 3/usr/local/etc/
RETPB\fB-b\fP, \fB--userdb\fP
\(cqDynamic' user database file name (default - turnuserdb.conf).
This user database is being dynamically checked while the \fIturnserver\fP 
is working, and the user accounts can be changed dynamically by
editing the file.
TPBOptions:
TPB\fB-d\fP, \fB--listening-device\fP
Listener interface device (optional functionality, Linux only).
TPB\fB-p\fP, \fB--listening-port\fP
TURN listener port for UDP and TCP listeners (Default: 3478).
TPB\fB--tls-listening-port\fP
TURN listener port for TLS and DTLS listeners (Default: 5349).
TPB\fB-L\fP, \fB--listening-ip\fP
Listener IP address of relay server. 
Multiple listeners can be specified.
If no \fBIP\fP(s) specified, then all IPv4 and 
IPv6 system IPs will be used for listening.
TPB\fB-i\fP, \fB--relay-device\fP
Relay interface device for relay sockets 
(optional, Linux only).
TPB\fB-E\fP, \fB--relay-ip\fP
Relay address (the local IP address that 
will be used to relay the packets to the 
\fIpeer\fP). Multiple relay addresses may be used.
If no relay \fBIP\fP(s) specified, then all 
non-loopback system IPs will be used.
TPB\fB-m\fP, \fB--relay-threads\fP
number of extra threads to handle the 
established connections.
By default, everything in handled in single thread 
(the default number of extra threads is 0).
TPB\fB--min-port\fP
Lower bound of the UDP port range for relay 
endpoints allocation.
Default value is 49152, according to RFC 5766.
TPB\fB--max-port\fP
Upper bound of the UDP port range for relay 
endpoints allocation.
Default value is 65535, according to RFC 5766.
TPB\fB-u\fP, \fB--user\fP
User account, in the column-separated 
form 'username:key'. 
The key is either the user password, or
the key is generated
by \fIturnadmin\fP command. In the second case,
the key must be prepended with '0x' symbols.
The key is calculated over the user name, 
the realm, and the user password.
TPB\fB-r\fP, \fB--realm\fP
Realm to be used for all users.
TPB\fB-q\fP, \fB--user-quota\fP
Per-user allocation quota.
TPB\fB-Q\fP, \fB--total-quota\fP
total allocation quota.
TPB\fB--cert\fP
Certificate file, PEM format. Same file 
search rules applied as for the configuration 
file. If both \fB--no-tls\fP and \fB--no-dtls\fP options 
are specified, 
then this parameter is not needed.
TPB\fB--pkey\fP
Private key file, PEM format. Same file 
search rules applied as for the configuration 
file. If both \fB--no-tls\fP and \fB--no-dtls\fP options 
are specified, then this parameter is not needed.
TPB\fB--no-udp\fP
Do not start UDP listeners.
TPB\fB--no-tcp\fP
Do not start TCP listeners.
TPB\fB--no-tls\fP
Do not start TLS listeners.
TPB\fB--no-dtls\fP
Do not start DTLS listeners.
TPB\fB-h\fP
Help.
TPB2.
\fIturnadmin\fP application is a TURN relay administration tool. 
TPBUsage:
PP$ \fIturnadmin\fP [command] [options]
PP$ \fIturnadmin\fP [ \fB-h\fP | \fB--help\fP]
TPBCommands:
TPB\fB-k\fP, \fB--key\fP
Generate key for a user.
TPB\fB-a\fP, \fB--add\fP
Add or update a user.
TPB\fB-d\fP, \fB--delete\fP
Delete a user.
TPBOptions:
TPB\fB-b\fP, \fB--userdb\fP
\(cqDynamic' user database file name (default - turnuserdb.conf).
TPB\fB-u\fP, \fB--user\fP
User name.
TPB\fB-r\fP, \fB--realm\fP
Realm.
TPB\fB-p\fP, \fB--password\fP
Password.
TPB\fB-h\fP, \fB--help\fP
Help.
TPBGenerate a key:
PP$ \fIturnadmin\fP \fB-k\fP \fB-u\fP &lt;username&gt; \fB-r\fP &lt;realm&gt; \fB-p\fP &lt;password&gt;
TPBAdd/update a user (and realm) in the userdb file:
PP$ \fIturnadmin\fP \fB-a\fP [\fB-b\fP &lt;user-db-file&gt;] \fB-u\fP &lt;username&gt; \fB-r\fP &lt;realm&gt; \fB-p\fP &lt;password&gt;
TPBDelete a user from the userdb file:
PP$ \fIturnadmin\fP \fB-d\fP [\fB-c\fP &lt;user-db-file&gt;] \fB-u\fP &lt;username&gt;
TPBHelp:
PP$ \fIturnadmin\fP \fB-h\fP
TPB3.
\fIuclient\fP application is for test purposes only. 
It was designed to simulate multiple clients. It uses asynch IO API in 
libevent to handle multiple clients. A client connects to the relay, 
negotiates the session, and sends multiple (configured number) messages to the server (relay), 
expecting the same number of replies. The length of the messages is configurable. 
The message is an arbitrary octet stream, but it can be configured as a string. 
The number of the messages to send is configurable. 
TPBUsage:
PP$ \fIuclient\fP [\fB-tSvsyhcxg\fP] [options] &lt;TURN-Server-IP-address&gt;
TPBFlags:
TPB\fB-t\fP
Use TCP (default is UDP).
TPB\fB-S\fP
Secure connection: TLS for TCP, DTLS for UDP.
TPB\fB-v\fP
Verbose.
TPB\fB-s\fP
Use "send" method in TURN; by default, it uses TURN "channels".
TPB\fB-y\fP
Use client-to-client connections: 
RTP/RTCP pair of channels to another RTP/RTCP pair of channels.
with this option the \fIpeer\fP application is not used,
as the relay endpoints are talking to each other. 
TPB\fB-h\fP
Hang on indefinitely after the last sent packet.
TPB\fB-c\fP
Do not create rtcp connections.
TPB\fB-x\fP
Request IPv6 relayed address (RFC6156).
TPB\fB-g\fP
Set DONT_FRAGMENT parameter in TURN requests.
TPBOptions:
TPB\fB-l\fP
Message length (Default: 100 Bytes).
TPB\fB-i\fP
Certificate file (for secure connections only).
TPB\fB-k\fP
Private key file (for secure connections only).
TPB\fB-p\fP
\fBTURN Server\fP port (Default: 3478 unsecure, 5349 secure).
TPB\fB-n\fP
Number of messages to send (Default: 5).
TPB\fB-d\fP
Local interface device (optional).
TPB\fB-L\fP
Local IP address (optional).
TPB\fB-m\fP
Number of clients (default is 1, 2 or 4, depending on options below).
TPB\fB-e\fP
Peer address.
TPB\fB-r\fP
Peer port (default 3479).
PPSee the examples in the "scripts" directory.
TPB4.
\fIpeer\fP application is a simple UDP-only echo backend server. This application
is used for the test purposes only, as a '\fIpeer\fP' for the \fIuclient\fP application. 
TPBUsage:
PP$ \fIpeer\fP [\fB-v\fP] [options]
TPBOptions:
TPB\fB-p\fP
Listening UDP port (Default: 3479). 
TPB\fB-d\fP
Listening interface device (optional)
TPB\fB-L\fP
Listening address of \fIpeer\fP server
TPB\fB-v\fP
Verbose
TPB5.
\fIstunclient\fP is a basic STUN client. It sends a STUN request and shows the reply information.
TPBUsage:
PP$ \fIstunclient\fP [options] &lt;STUN-Server-IP-address&gt;
TPBOptions:
TPB\fB-p\fP
STUN server port (Default: 3478). 
TPB\fB-L\fP
Local address to use (optional).
SH LIBRARIESIn the lib/ sub-directory the build process will create TURN client messaging library.
In the include/ sub-directory, the necessary include files will be placed.

<!-- Close man2wiki.pl generated section -->