
I. PLATFORMS

The TURN Server and utilities were developed and tested on the following platforms:

	- Linux Ubuntu 11.04, 32 bits
	- Linux Ubuntu 12.10, 32 bits 
	- FreeBSD 6.3 32 bits
	- FreeBSD 8.2 32 bits
	- FreeBSD 9.0 64 bits
	- Solaris 11 x86 64 bits

It may work on many other UNIXes, as well. The build.sh script and/or 
Makefile may need adjustments for other UNIXes.

II. COMPILERS

The TURN Server is written in C programming language. 

The tested C compilers are:

	- gcc 3.4.6 thru 4.7.2
	- clang 3.0 or better
	- Solaris Studio 12.3 C compiler, version 5.12

It may be compiled with others compilers, too.

III. EXTRA LIBRARIES AND UTILITIES

In addition to common UNIX OS services and libraries, this code requires:

1) OpenSSL development libraries and headers, version 0.9.6 or better.

NOTE: the runtime libraries are not enough to compile the code,
the full development OpenSSL setup is required. For example, in Ununtu, 
the developer has to install the libssl-dev package.

NOTE: The best results are usually obtained by downloading and
installing a fresh 1.x.x OpenSSL full development version from their site.

2) libevent2 IO library. 
It is assumed to be installed either in /usr or /usr/local/ directory. 
Default libevent2 installation installs it in one of those locations.
If the location is  different, then the Makefile has to be adjusted.

	Libevent installation instructions:
	
	*) FreeBSD:

		$ cd /usr/ports/devel/libevent2/
		$ sudo make install

		or download and install it from http://libevent.org.

	**) Ubuntu 12.10 and later: install packages libevent, libevent-core, libevent-dev, libevent-threads, 			libevent-openssl. Those packages include runtime libraries and development headers.

	***) Linux and UNIXes: 

		Download 2.x.xx version of libevent from http://libevent.org and 
		follow the supplied instructions. The instructions are fairly
		standard (./configure and make install).

NOTE: an older libevent version, version 1.x.x, is often included in some Linux 
distributions. That version has its deficiencies and is inferior to the newer 
libevent2, especially in the performance department. This is why we are 
not providing backward compatibility with the older libevent version.

NOTE: if you are compiling libevent2 library yourself, then do that after full OpenSSL 
installation. libevent2 depends on OpenSSL: if OpenSSL present, libevent2 compiles itself
for extra functionality.

3) The system must have usual pthread library and headers available.

IV. BUILD

build.sh script will create bin sub-directory and put the TURN server there. 
The test applications will be located in testapps/bin/ 
sub-directory.

For most platforms, just "make" would suffice.

The supplied Makefile creates dynamically linked binaries.
If statically linked binaries are desired, then the Makefile
has to be changed, accordingly. 
 
The programs can be either called directly, or a shell scripts can be used. 
The script examples are located in scripts.examples directory.

"make clean" command will clean all results of the build process.

IV. TEST

If everything compiled properly, then the following programs must run 
together successfully, simulating TURN processing in local networking 
environment:

Open three shell screens or consoles:

In shell number 1, run peer application: 
 $ scripts.examples/peer.sh

In shell number 2, run local TURN server application:
 $ scripts.examples/secure_relay.sh

In shell number 3, run test client application:

 $ scripts.examples/secure_uclient.sh

If the client application produces output and in 22 seconds prints 
the jitter, loss and latency statistics, then everything runs fine.

Use scripts relay.sh and secure_relay.sh as guidance how to run 
the TURN server.

V. CLIENT API LIBRARY.

The compilation process will create lib/ sub-directory with libturnclient.a library. 
The header files for this library are located in include/turn/client/ sub-directory.

