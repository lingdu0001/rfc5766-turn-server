Smaller stuff:

1) use --<arg> arguments in ./configure script.
2) Anonymous TLS server ?

Larger stuff:

0) Fedora package.

1) DTLS support for Cygwin.

2) Locale support (?).

	Currently we assume that all text data is 8-bits encoded, like C locale.
	It would be nice to support localized strings (8-bits and 2-bytes as well).
	But I am not sure whether this is really important, given the essentially
	backend nature of the TURN Server. It is so deeply "hidden" in the network
	infrastructure that the significant code complication involved into 2-bytes 
	string support is probably unjustified.

3) User's manual.

4) Developer's manual.

5) MS Windows support.

	It would involve a good GUI for MS Windows users.

6) HTTP or GUI status monitor and management.

	For enterprise users, a management (configuration, status and statistics) 
	GUI has to be implemented. Currently, all these features are available 
	through the shell command line and through Redis command line.

	Also, Redis status data to be extended.

7) Add SHA256 security.

	SHA1 is mandatory according to RFC5766. But it would be nice to have 
	SHA256, as an option. I guess that for some applications the additional 
	CPU load can be justified.

8) A smarter load balancer has to be implemented.
 
	The load balancer has to have a heartbeat channels with the slave servers, 
	currently it is only just a dumb round-robin load distributor.

9) For a large enterprise, a user-space stack to be integrated.

	An another socket abstraction to be implemented, 
	the one that uses the user-space TCP/IP stack with zero memory copy. 
	This is an ambitious goal that would increase the system scaleability,
	significantly. The stock TCP/IP stack in UNIX and in MS WIndows do not 
	scale gracefully. We are trying to suppress those issues in the TURN Server,
	by using an advanced synchronous I/O technique, but still the underlying
	stock TCP/IP stack is a limitation.  

10) Traffic recording (for selected allocations).

	That would be a helpful feature for a large enterprise 
	(for testing and security purposes). 

