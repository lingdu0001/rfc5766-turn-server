.\"
.TH TURN  "21 December 2012" "" ""
.RS
.TP
.B
1.
GENERAL INFORMATION
.PP
The TURN Server project contains the source code of a TURN server and TURN client 
messaging library. Also, four extra programs provided, for testing-only 
purposes. 
.PP
Current version is 1.2.
.PP
See the INSTALL file for the building instructions.
.PP
After the build, you will have the following binary images:
.TP
.B
*
turnserver: TURN server relay. 
The compiled binary image of this program is located in bin/ sub-directory.
.TP
.B
*
turnadmin: TURN administration tool. This tool can be used to generate 
TURN keys for the user accounts. For security reasons, we do not recommend 
storing passwords openly. The better option is to use pre-processed "keys" 
which are then used for authentication. These keys are generated by turnadmin. 
Turnadmin is a link to turnserver binary, but turnadmin performs different 
functions.
.TP
.B
*
uclient: emulates multiple UDP,TCP,TLS or DTLS clients. 
(this program is provided for the testing purposes only !)
The compiled binary image of this program is located in testapps/bin/ 
sub-directory.
.PP
WARNING: the uclient program is a primitive client application. 
It does not implement the re-transmission pattern that is necessary for 
a correct TURN client implementation. In TURN, the retransmission burden 
is lying entirely on the client application. We provide the messaging 
functionality in the client library, but the client must implement 
the correct Networking IO processing in the client program code.
.TP
.B
*
peer: a simple stateless UDP-only "echo" server, 
to be used as the final server in relay pattern ("peer"). For every incoming 
UDP packet, it simply echoes it back.
(this program is provided for the testing purposes only !) 
When the test clients are communicating in the client-to-client manner, 
this component is not needed.
.PP
The compiled binary image of this program is located in testapps/bin/ subdirectory.
.TP
.B
*
stunclient: a simple STUN client example.
The compiled binary image of this program is located in testapps/bin/ subdirectory.
.PP
In the "scripts" subdirectory, you will find the examples of command lines to be used 
to run the programs.
.TP
.B
2.
RUN
.TP
.B
*
turnserver application is a TURN relay server implementation. 
.PP
The command line parameters are:
.PP
.nf
.fam C
        -d, --listening-device          Listener interface device (optional, 
                                        Linux only).
        -p, --listening-port            TURN listener port for UDP and TCP 
                                        listeners (Default: 3478).
            --tls-listening-port        TURN listener port for TLS and DTLS listeners 
                                        (Default: 5349).
        -L, --listening-ip              Listener IP address of relay server. 
                                        Multiple listeners can be specified.
                                        If no IP(s) specified, then all IPv4 and 
                                        IPv6 system IPs will be used for listening.
        -i, --relay-device              Relay interface device for relay sockets 
                                        (optional, Linux only).
        -E, --relay-ip                  Relay address (the local IP address that 
                                        will be used to relay the packets to the 
                                        peer). Multiple relay addresses may be used.
                                        If no relay IP(s) specified, then all 
                                        non-loopback system IPs will be used.
        -m, --relay-threads             number of extra threads to handle the 
                                        established connections.
                                        By default, everything in handled in single thread 
                                        (the default number of extra threads is 0).
        -l, --min-port                  Lower bound of the UDP port range for relay 
                                        endpoints allocation.
                                        Default value is 49152, according to RFC 5766.
        -r, --max-port                  Upper bound of the UDP port range for relay 
                                        endpoints allocation.
                                        Default value is 65535, according to RFC 5766.
        -v, --verbose                   Verbose.
        -f, --fingerprint               Use fingerprints in the TURN messages.
        -a, --lt-cred-mech              Use long-term credential mechanism.
        -u, --user                      User account, in the column-separated 
                                        form 'username:key'. 
                                        The key is either the user password, or
                                        the key is generated
                                        by bin/turnadmin command. In the second case,
                                        the key must be prepended with '0x' symbols.
                                        The key is calculated over the user name, 
                                        the realm, and the user password.
        -e, --realm                     Realm.
        -q, --user-quota                Per-user allocation quota.
        -Q, --total-quota               total allocation quota.
        -c                              Configuration file name (default - turn.conf).
                                        The format of config file can be seen in 
                                        the supplied etc/turn.conf example file. 
                                        Long names of the options are used as 
                                        the configuration items names in the file.  
                                        If not absolute path is supplied, then the file is 
                                        searched in the following directories: 
                                                ./etc/
                                                ../etc/
                                                /etc/turn/
                                                /etc/local/etc/turn/
                                                /etc/ 
                                                /usr/local/etc/
        -n                              Do not use configuration file.
            --cert                      Certificate file, PEM format. Same file 
                                        search rules applied as for the configuration 
                                        file. If both --no-tls and --no-dtls options 
                                        are specified, 
                                        then this parameter is not needed.
            --pkey                      Private key file, PEM format. Same file 
                                        search rules applied as for the configuration 
                                        file. If both --no-tls and --no-dtls options 
                                        are specified, 
                                        then this parameter is not needed.
            --no-udp                    Do not start UDP listeners.
            --no-tcp                    Do not start TCP listeners.
            --no-tls                    Do not start TLS listeners.
            --no-dtls                   Do not start DTLS listeners.
        -h                              help.

.fam T
.fi
.TP
.B
*
turnadmin application is a TURN relay administration tool. 
.PP
Usage:
.PP
Generate a key:
$ turnadmin \fB-k\fP \fB-u\fP <username> \fB-r\fP <realm> \fB-p\fP <password>
.PP
Add/update a user (and realm) in the config file:
$ turnadmin \fB-a\fP [\fB-c\fP <config-file>] \fB-u\fP <username> \fB-r\fP <realm> \fB-p\fP <password>
.PP
Delete a user from the config file:
$ turnadmin \fB-d\fP [\fB-c\fP <config-file>] \fB-u\fP <username>
.PP
Help:
.TP
.B
$ turnadmin \fB-h\fP
.PP
The command line parameters are:
.PP
.nf
.fam C
        -k, --key               Command: generate key for a user.
        -a, --add               Command: add or update a user.
        -d, --delete            Command: delete a user.
        -c, --config-file       Configuration file.
        -u, --user              User name.
        -r, --realm             Realm.
        -p, --password          Password.
        -h, --help              Help.

.fam T
.fi
.TP
.B
*
uclient application is for test purposes only. 
It was designed to simulate multiple clients. It uses asynch IO API in 
libevent to handle multiple clients. A client connects to the relay, 
negotiates the session, and sends multiple (configured number) messages to the server (relay), 
expecting the same number of replies. The length of the messages is configurable. 
The message is an arbitrary octet stream, but it can be configured as a string. 
The number of the messages to send is configurable. 
.PP
The command-line parameters are:
.PP
.nf
.fam C
        -l      Message length (Default: 100 Bytes);
        -t      Use TCP (default is UDP).
        -S      Secure connection: TLS for TCP, DTLS for UDP.
        -i      Certificate file (for secure connections only).
        -k      Private key file (for secure connections only).
        -p      TURN server port (Default: 3478 unsecure, 5349 secure);
        -n      Number of messages to send (Default: 5);
        -d      Local interface device (optional);
        -L      Local IP address (optional);
        -v      Verbose;
        -m      Number of clients (default is 1, 2 or 4, depending on options below);
        -s      Use "send" method in TURN; by default, it uses TURN "channels".
        -y      Use client-to-client connections: 
                RTP/RTCP pair of channels to another RTP/RTCP pair of channels;
                with this option the peer application is not used,
                as the relay endpoints are talking to each other; 
        -h      Hang on indefinitely after the last sent packet;
        -e      Peer address;
        -r      Peer port (default 3479);
        -c      Do not create rtcp connections;
        -x      Request IPv6 relayed address (RFC6156);
        -g      Set DONT_FRAGMENT parameter in TURN requests;

.fam T
.fi
.TP
.B
*
peer application is a simple UDP-only echo backend server. This application
is used for the test purposes only, as a 'peer' for the uclient application. 
.PP
The command line parameters are:
.PP
.nf
.fam C
    -p      Listening UDP port (Default: 3479). 
    -d      Listening interface device (optional)
    -L      Listening address of peer server
    -v      verbose

.fam T
.fi
.TP
.B
*
stunclient is a basic STUN client. It sends a STUN request and shows the reply information.
.PP
Usage: stunclient [options] <IP-address>
.PP
The command line parameters are:
.PP
.nf
.fam C
    -p      STUN server port (Default: 3478). 
    -L      local address to use (optional).

.fam T
.fi
.TP
.B
3.
LIBRARIES
.PP
In the lib/ sub-directory the compilation process will create TURN client messaging library.
In the include/ sub-directory, the necessary include files will be placed.
